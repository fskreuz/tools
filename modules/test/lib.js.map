{"version":3,"file":"lib.js","sources":["modules/test/lib/runner.js","modules/test/lib/assert.js"],"sourcesContent":["const noop = () => { }\nconst modules = []\n\nconst TestError = class extends Error {\n  constructor (result, ...params) {\n    super(...params)\n    this.result = result\n  }\n}\n\nconst testConfig = {\n  run: true,\n  expectSuccess: true,\n  getMessage: (testNumber, module, test) => `${testNumber} ${module} - ${test}`\n}\n\nconst todoConfig = {\n  run: true,\n  expectSuccess: false,\n  getMessage: (testNumber, module, test) => `${testNumber} # TODO ${module} - ${test}`\n}\n\nconst skipConfig = {\n  run: false,\n  expectSuccess: false,\n  getMessage: (testNumber, module, test) => `${testNumber} # SKIP ${module} - ${test}`\n}\n\nconst diagnostics = ({ actual, expected, stack }) => {\n  const block = []\n\n  block.push(`Actual:\\n\\n${JSON.stringify(actual, null, 2)}`)\n  block.push(`Expected:\\n\\n${JSON.stringify(expected, null, 2)}`)\n\n  if (stack) block.push(`Stack:\\n\\n${stack}`)\n\n  return block.join('\\n\\n').replace(/^(.*)/gm, '# $1')\n}\n\nconst runner = async (modules) => {\n  const length = modules.reduce((c, v) => c + v.tests.length, 0)\n  let testNumber = 0\n  let isFail = false\n  const log = []\n\n  log.push('TAP version 13')\n  log.push(`1..${length}`)\n\n  for (const module of modules) {\n    for (const test of module.tests) {\n      testNumber = testNumber + 1\n\n      const testLine = test.getMessage(testNumber, module.name, test.name)\n\n      if (test.run) {\n        try {\n          await test.callback()\n          log.push(`ok ${testLine}`)\n        } catch (error) {\n          log.push(`not ok ${testLine}\\n${diagnostics(error)}`)\n\n          if (test.expectSuccess) {\n            isFail = true\n          }\n        }\n      } else {\n        log.push(`ok ${testLine}`)\n      }\n    }\n  }\n\n  if (isFail) throw new TestError(log.join('\\n'), 'Test failed')\n\n  return log.join('\\n')\n}\n\n/**\n * Creates a test module.\n *\n * @param {string} moduleName The module's name.\n */\nexport const module = (moduleName) => {\n  const testDefaults = {\n    name: 'Test Defaults',\n    run: true,\n    expectSuccess: true,\n    getMessage: (testNumber, module, test) => `${testNumber} ${module} - ${test}`,\n    callback: noop\n  }\n\n  // Each module has its own instance of the tests array.\n  const module = { name: moduleName, tests: [] }\n\n  modules.push(module)\n\n  return {\n    /**\n     * Defines a runnable test.\n     *\n     * @param {string} testName The name of the test.\n     * @param {Function} callback The test body.\n     */\n    test: (testName, callback = noop) => {\n      module.tests.push({ ...testDefaults, ...testConfig, callback, name: testName })\n    },\n    /**\n     * Defines a test whose result is not expected to pass.\n     *\n     * @param {string} testName The name of the test.\n     * @param {Function} callback The test body.\n     */\n    todo: (testName, callback = noop) => {\n      module.tests.push({ ...testDefaults, ...todoConfig, callback, name: testName })\n    },\n    /**\n     * Defines a test that will be skipped.\n     *\n     * @param {string} testName The name of the test.\n     * @param {Function} callback The test body.\n     */\n    skip: (testName, callback = noop) => {\n      module.tests.push({ ...testDefaults, ...skipConfig, callback, name: testName })\n    }\n  }\n}\n\n// Test setup happens in the same tick as the execution of the script.\n// Test execution happens in some tick in the future.\nsetTimeout(async () => {\n  try {\n    const result = await runner(modules)\n    console.log(result)\n  } catch (e) {\n    // In tools like Gulp, logs are sent to stderr when a non-zero is returned.\n    // So we must log accordingly so that Gulp doesn't swallow the report.\n    console.warn(e.result)\n\n    // Ensures that the process exits as non-zero when run in Node.js.\n    if (process) process.exitCode = 1\n  }\n})\n","const throwsTrue = () => true\n\nconst isEqual = (a, e) => Object.is(a, e)\n\nconst isDeepEqual = (a, e) => {\n  if (Object.is(a, e)) return true\n\n  if (a instanceof Date && e instanceof Date) return a.getTime() === e.getTime()\n\n  if (!a || !e || (typeof a !== 'object' && typeof e !== 'object')) return Object.is(a, e)\n\n  if (a.prototype !== e.prototype) return false\n\n  const ea = Object.entries(a).sort((a, b) => a[0].localeCompare(b[0]))\n  const ee = Object.entries(e).sort((a, b) => a[0].localeCompare(b[0]))\n\n  if (ea.length !== ee.length) return false\n\n  if (!ee.every((eev, i) => ea[i][0] === eev[0])) return false\n\n  if (!ee.every((eev, i) => isDeepEqual(ea[i][1], eev[1]))) return false\n\n  return Object.is(typeof a, typeof e)\n}\n\nfunction isConstructor (f) {\n  try {\n    Reflect.construct(String, [], f)\n  } catch (e) {\n    return false\n  }\n  return true\n}\n\nconst matchError = (e, matcher) => {\n  if (Error.prototype.isPrototypeOf.call(Error, matcher) && e instanceof matcher) return true\n  if (matcher instanceof RegExp && matcher.test(e.message)) return true\n  if (typeof matcher === 'string' && e.message === matcher) return true\n  // The isConstructor check is needed because classes are functions.\n  if (typeof matcher === 'function' && !isConstructor(matcher) && matcher(e)) return true\n  return false\n}\n\nexport const AssertionError = class extends Error {\n  constructor (actual, expected, ...args) {\n    super(...args)\n    this.expected = expected\n    this.actual = actual\n  }\n}\n\nexport const assert = (pass, actual, expected, message = 'Assertion must pass.') => {\n  if (!pass) throw new AssertionError(actual, expected, message)\n}\n\nexport const ok = (value, message = 'Value must be truthy.') => {\n  assert(!!value, value, true, message)\n}\n\nexport const notOk = (value, message = 'Value must be falsy.') => {\n  assert(!value, value, false, message)\n}\n\nexport const equal = (actual, expected, message = 'Value must be equal') => {\n  assert(isEqual(actual, expected), actual, expected, message)\n}\n\nexport const notEqual = (actual, expected, message = 'Value must not be equal') => {\n  assert(!isEqual(actual, expected), actual, expected, message)\n}\n\nexport const deepEqual = (actual, expected, message = 'Value must be deep equal') => {\n  assert(isDeepEqual(actual, expected), actual, expected, message)\n}\n\nexport const notDeepEqual = (actual, expected, message = 'Value must not be deep equal') => {\n  assert(!isDeepEqual(actual, expected), actual, expected, message)\n}\n\nexport const throws = (operation, matcher = throwsTrue, message = 'Operation must throw an error') => {\n  try { operation() } catch (e) { if (matchError(e, matcher)) return }\n  throw new AssertionError('Error thrown', 'No error thrown', message)\n}\n\nexport const rejects = async (actual, matcher = throwsTrue, message = 'Promise must reject') => {\n  try { await actual } catch (e) { if (matchError(e, matcher)) return }\n  throw new AssertionError('Promise rejected', 'Promise not rejected', message)\n}\n"],"names":["noop","modules","TestError","Error","constructor","result","params","super","this","testConfig","run","expectSuccess","getMessage","testNumber","module","test","todoConfig","skipConfig","diagnostics","actual","expected","stack","block","push","JSON","stringify","join","replace","moduleName","testDefaults","name","callback","tests","testName","todo","skip","setTimeout","async","length","reduce","c","v","isFail","log","testLine","error","runner","console","e","warn","process","exitCode","throwsTrue","isEqual","a","Object","is","isDeepEqual","Date","getTime","prototype","ea","entries","sort","b","localeCompare","ee","every","eev","i","matchError","matcher","isPrototypeOf","call","RegExp","message","f","Reflect","construct","String","isConstructor","AssertionError","args","assert","pass","ok","value","notOk","equal","notEqual","deepEqual","notDeepEqual","throws","operation","rejects"],"mappings":"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"}