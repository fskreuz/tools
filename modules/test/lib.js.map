{"version":3,"file":"lib.js","sources":["modules/test/lib/runner.js","modules/test/lib/assert.js"],"sourcesContent":["const noop = () => { }\nconst tests = []\n\nconst TestError = class extends Error {\n  constructor (result, ...params) {\n    super(...params)\n    this.result = result\n  }\n}\n\nconst testDefaults = {\n  name: 'Test Defaults',\n  run: true,\n  expectSuccess: true,\n  getMessage: (testNumber, test) => `${testNumber} ${test}`,\n  callback: noop\n}\n\nconst testConfig = {\n  run: true,\n  expectSuccess: true,\n  getMessage: (testNumber, test) => `${testNumber} ${test}`\n}\n\nconst todoConfig = {\n  run: true,\n  expectSuccess: false,\n  getMessage: (testNumber, test) => `${testNumber} # TODO ${test}`\n}\n\nconst skipConfig = {\n  run: false,\n  expectSuccess: false,\n  getMessage: (testNumber, test) => `${testNumber} # SKIP ${test}`\n}\n\nconst diagnostics = ({ actual, expected, stack }) => {\n  const block = []\n\n  block.push(`Actual:\\n\\n${JSON.stringify(actual, null, 2)}`)\n  block.push(`Expected:\\n\\n${JSON.stringify(expected, null, 2)}`)\n\n  if (stack) block.push(`Stack:\\n\\n${stack}`)\n\n  return block.join('\\n\\n').replace(/^(.*)/gm, '# $1')\n}\n\nconst timeout = () => new Promise((resolve, reject) => {\n  setTimeout(() => {\n    reject(new Error('Test timed out.'))\n  }, 3000)\n})\n\nconst runner = async (tests) => {\n  let isFail = false\n  const log = []\n\n  log.push('TAP version 13')\n  log.push(`1..${tests.length}`)\n\n  for (const [index, test] of tests.entries()) {\n    const testLine = test.getMessage(index + 1, test.name)\n\n    if (test.run) {\n      try {\n        await Promise.race([test.callback(), timeout()])\n        log.push(`ok ${testLine}`)\n      } catch (error) {\n        log.push(`not ok ${testLine}\\n${diagnostics(error)}`)\n\n        if (test.expectSuccess) {\n          isFail = true\n        }\n      }\n    } else {\n      log.push(`ok ${testLine}`)\n    }\n  }\n\n  if (isFail) throw new TestError(log.join('\\n'), 'Test failed')\n\n  return log.join('\\n')\n}\n\n/**\n * Defines a runnable test.\n *\n * @param {string} name The name of the test.\n * @param {Function} callback The test body.\n */\nexport const test = (name, callback = noop) => {\n  tests.push({ ...testDefaults, ...testConfig, name, callback })\n}\n\n/**\n * Defines a test whose result is not expected to pass.\n *\n * @param {string} name The name of the test.\n * @param {Function} callback The test body.\n */\nexport const todo = (name, callback = noop) => {\n  tests.push({ ...testDefaults, ...todoConfig, name, callback })\n}\n\n/**\n * Defines a test that will be skipped.\n *\n * @param {string} name The name of the test.\n * @param {Function} callback The test body.\n */\nexport const skip = (name, callback = noop) => {\n  tests.push({ ...testDefaults, ...skipConfig, name, callback })\n}\n\n// Test setup happens in the same tick as the execution of the script.\n// Test execution happens in some tick in the future.\nsetTimeout(async () => {\n  try {\n    const result = await runner(tests)\n    console.log(result)\n  } catch (e) {\n    // In tools like Gulp, logs are sent to stderr when a non-zero is returned.\n    // So we must log accordingly so that Gulp doesn't swallow the report.\n    console.warn(e.result)\n\n    // Ensures that the process exits as non-zero when run in Node.js.\n    if (process) process.exitCode = 1\n  }\n})\n","const throwsTrue = () => true\n\nconst isEqual = (a, e) => Object.is(a, e)\n\nconst isDeepEqual = (a, e) => {\n  if (Object.is(a, e)) return true\n\n  if (a instanceof Date && e instanceof Date) return a.getTime() === e.getTime()\n\n  if (!a || !e || (typeof a !== 'object' && typeof e !== 'object')) return Object.is(a, e)\n\n  if (a.prototype !== e.prototype) return false\n\n  const ea = Object.entries(a).sort((a, b) => a[0].localeCompare(b[0]))\n  const ee = Object.entries(e).sort((a, b) => a[0].localeCompare(b[0]))\n\n  if (ea.length !== ee.length) return false\n\n  if (!ee.every((eev, i) => ea[i][0] === eev[0])) return false\n\n  if (!ee.every((eev, i) => isDeepEqual(ea[i][1], eev[1]))) return false\n\n  return Object.is(typeof a, typeof e)\n}\n\nfunction isConstructor (f) {\n  try {\n    Reflect.construct(String, [], f)\n  } catch (e) {\n    return false\n  }\n  return true\n}\n\nconst matchError = (e, matcher) => {\n  if (Error.prototype.isPrototypeOf.call(Error, matcher) && e instanceof matcher) return true\n  if (matcher instanceof RegExp && matcher.test(e.message)) return true\n  if (typeof matcher === 'string' && e.message === matcher) return true\n  // The isConstructor check is needed because classes are functions.\n  if (typeof matcher === 'function' && !isConstructor(matcher) && matcher(e)) return true\n  return false\n}\n\nexport const AssertionError = class extends Error {\n  constructor (actual, expected, ...args) {\n    super(...args)\n    this.expected = expected\n    this.actual = actual\n  }\n}\n\nexport const assert = (pass, actual, expected, message = 'Assertion must pass.') => {\n  if (!pass) throw new AssertionError(actual, expected, message)\n}\n\nexport const ok = (value, message = 'Value must be truthy.') => {\n  assert(!!value, value, true, message)\n}\n\nexport const notOk = (value, message = 'Value must be falsy.') => {\n  assert(!value, value, false, message)\n}\n\nexport const equal = (actual, expected, message = 'Value must be equal') => {\n  assert(isEqual(actual, expected), actual, expected, message)\n}\n\nexport const notEqual = (actual, expected, message = 'Value must not be equal') => {\n  assert(!isEqual(actual, expected), actual, expected, message)\n}\n\nexport const deepEqual = (actual, expected, message = 'Value must be deep equal') => {\n  assert(isDeepEqual(actual, expected), actual, expected, message)\n}\n\nexport const notDeepEqual = (actual, expected, message = 'Value must not be deep equal') => {\n  assert(!isDeepEqual(actual, expected), actual, expected, message)\n}\n\nexport const throws = (operation, matcher = throwsTrue, message = 'Operation must throw an error') => {\n  try { operation() } catch (e) { if (matchError(e, matcher)) return }\n  throw new AssertionError('Error thrown', 'No error thrown', message)\n}\n\nexport const rejects = async (actual, matcher = throwsTrue, message = 'Promise must reject') => {\n  try { await actual } catch (e) { if (matchError(e, matcher)) return }\n  throw new AssertionError('Promise rejected', 'Promise not rejected', message)\n}\n"],"names":["noop","tests","TestError","Error","constructor","result","params","super","this","testDefaults","name","run","expectSuccess","getMessage","testNumber","test","callback","testConfig","todoConfig","skipConfig","diagnostics","actual","expected","stack","block","push","JSON","stringify","join","replace","todo","skip","setTimeout","async","isFail","log","length","index","entries","testLine","Promise","race","resolve","reject","error","runner","console","e","warn","process","exitCode","throwsTrue","isEqual","a","Object","is","isDeepEqual","Date","getTime","prototype","ea","sort","b","localeCompare","ee","every","eev","i","matchError","matcher","isPrototypeOf","call","RegExp","message","f","Reflect","construct","String","isConstructor","AssertionError","args","assert","pass","ok","value","notOk","equal","notEqual","deepEqual","notDeepEqual","throws","operation","rejects"],"mappings":"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"}